name: Application tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  app-tests-analyze:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Add exec permission to mvnw
        run: chmod +x mvnw

      - name: Compile the application
        run: ./mvnw -B clean install -DskipTests=true

      - name: Start the application
        run: |
          ./mvnw spring-boot:run > logs.txt 2>&1 &
          echo $! > spring-boot-app.pid
          sleep 60
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/test_database
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
          SPRING_PROFILES_ACTIVE: test
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Check listening ports
        run: ss -tuln

      - name: Run Tests
        run: ./mvnw -B verify -Dspring.datasource.url=jdbc:mysql://localhost:3306/test_database -Dspring.datasource.username=root -Dspring.datasource.password=root -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
        env:
          SPRING_PROFILES_ACTIVE: test
          headless: true
          EXCLUDE_JUNIT: false
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Show app logs
        if: always()
        run: |
          if [ -f logs.txt ]; then
            cat logs.txt
          fi

      - name: Shut down the application
        if: always()
        run: |
          if [ -f spring-boot-app.pid ]; then
            PID="$(cat spring-boot-app.pid)"
            if ps -p "$PID" > /dev/null; then
              kill "$PID"
            fi
          fi

      - if: ${{ github.actor != 'dependabot[bot]' }}
        name: Collect Jacoco report and send to Sonar
        run: |
          ./mvnw sonar:sonar \
            -Dsonar.projectKey=Arquisoft_wichat_es4b \
            -Dsonar.organization=arquisoft \
            -Dsonar.branch.name=${{ github.head_ref || github.ref_name }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths="${{ github.workspace }}/target/jacoco/jacoco.xml,${{ github.workspace }}/target/site/jacoco-it/jacoco.xml"
            -Dspring.profiles.active=test